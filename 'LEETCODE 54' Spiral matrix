class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {

        int m = matrix.size();
        int n = matrix[0].size();

        int s_row = 0, e_row = m - 1;
        int s_col = 0, e_col = n - 1;

        vector<int> ans;

        while (s_row <= e_row && s_col <= e_col) {

            // top

            for (int i = s_col; i <= e_col; i++) {
                ans.push_back(matrix[s_row][i]);
            }

            // right
            for (int i = s_row + 1; i <= e_row; i++) {
                ans.push_back(matrix[i][e_col]);
            }

            // bottom
            for (int i = e_col - 1; i >= s_col; i--) {

                if (s_row == e_row) {
                    break;
                }
                ans.push_back(matrix[e_row][i]);
            }

            // left
            for (int i = e_row - 1; i > s_row; i--) {
                if (s_col == e_col) {
                    break;
                }
                ans.push_back(matrix[i][s_col]);
            }

            s_row++;
            e_row--;
            s_col++;
            e_col--;
        }
        return ans;
    }
};
